### This file was generated by Nexus Schema
### Do not make changes to this file directly

type ActivityLog {
  action: String!
  actorId: String
  createdAt: Date
  errorCode: String
  errorMessage: String
  id: String!
  inputModel: String!
  inputModelId: String!
  message: String
  outputModel: String
  outputModelId: String
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

enum Gender {
  FEMALE
  MALE
  NO_BINARY
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON
  @specifiedBy(
    url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf"
  )

type LoginResponse {
  token: String
  user: User
}

type Mutation {
  _registerActivityLog(
    action: String!
    errorCode: String
    errorMessage: String
    inputModel: String!
    inputModelId: String!
    message: String
    outputModel: String
    outputModelId: String
  ): ActivityLog
  login(email: String!, password: String!): LoginResponse
  registerUser(
    email: String!
    newsletter: Boolean
    password: String!
  ): RegisterResponse
  renewToken: String
  requestResetPassword(email: String!): Boolean
  resetPasswordWithToken(newPassword: String!, token: String!): Boolean
  updateUser(
    birthday: Date
    gender: Gender
    lastname: String
    name: String
    newsletterOptIn: Boolean
  ): User
}

type Query {
  _canDoAction(requiredPermissions: [String]!, userId: String!): Boolean
  me(appId: String): User
}

type RegisterResponse {
  token: String
  user: User
}

type User {
  aclRole: UserRole
  birthday: Date
  deletedAt: DateTime
  email: String
  gender: Gender
  id: String!
  lastname: String
  name: String
  newsletterOptIn: Boolean
  status: UserStatus
}

input UserCreateInput {
  aclRole: UserRole
  birthday: Date
  email: String!
  gender: Gender
  lastname: String
  name: String
  newsletterOptIn: Boolean
  status: UserStatus
}

enum UserRole {
  ADMIN
  USER
}

enum UserStatus {
  ACTIVE
  BANNED
  DELETED_BY_ADMIN
  DELETED_BY_USER
  INACTIVE
}
